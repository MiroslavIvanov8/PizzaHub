@model PizzaHub.Core.ViewModels.Order.AllPendingTodayOrdersViewModel

<h2>Pending Orders</h2>

<table class="table table-striped">
    <thead>
    <tr>
        <th>Order ID</th>
        <th>Status</th>
        <th>Created On</th>
        <th>Restaurant</th>
        <th>Customer</th>
        <th>Address</th>
        <th>Order Items</th>
        <th>Amount</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var order in Model.Orders)
    {
        <tr>
            <td>@order.Id</td>
            <td style="background-color: orange; font-weight: bold;">@order.Status</td> 
            <td>@order.CreatedOn</td>
            <td>@order.Restaurant</td>
            <td>@order.Customer</td>
            <td>@order.Address</td>
            <td>
                @foreach (var item in order.OrderItems)
                {
                    <span>@item.Name x @item.Quantity</span>
                    if (!ReferenceEquals(item, order.OrderItems.Last()))
                    {
                        <span>, </span>
                    }
                }
            </td>
            <td>$@order.Amount</td>
            <td>
                @if (order.Status == "Pending")
                {
                    <form asp-action="MarkOrderAccepted" asp-route-orderId="@order.Id">
                        <button type="submit" class="btn btn-primary">Accept Order</button>
                    </form>
                }
                else
                {
                    <span class="text-success">In Progress</span>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalOrdersToday /
                               Model.OrdersPerPage);
}
<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-area="Admin"
           asp-controller="Admin"
           asp-action="ShowPendingOrders"
        >Previous</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                     !Model.Orders.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-area="Admin"
           asp-controller="Admin"
           asp-action="ShowPendingOrders"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
        >Next</a>
    </div>
</div>